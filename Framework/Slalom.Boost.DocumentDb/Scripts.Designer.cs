//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Slalom.Boost.DocumentDb {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Scripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Scripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Slalom.Boost.DocumentDb.Scripts", typeof(Scripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * A DocumentDB stored procedure that bulk deletes documents for a given query.&lt;br/&gt;
        /// * Note: You may need to execute this sproc multiple times (depending whether the sproc is able to delete every document within the execution timeout limit).
        /// *
        /// * @function
        /// * @param {string} query - A query that provides the documents to be deleted (e.g. &quot;SELECT * FROM c WHERE c.founded_year = 2008&quot;)
        /// * @returns {Object.&lt;number, boolean&gt;} Returns an object with the two properties:&lt;br/&gt;
        /// *   deleted - contains a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bulkDelete {
            get {
                return ResourceManager.GetString("bulkDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //------------------------------------------------------------
        ///// Copyright (c) Microsoft Corporation.  All rights reserved.
        /////------------------------------------------------------------
        ///
        ///function bulkImport(docs, upsert) {
        ///    var collection = getContext().getCollection();
        ///    var collectionLink = collection.getSelfLink();
        ///
        ///    // The count of imported docs, also used as current doc index.
        ///    var count = 0;
        ///    var errorCodes = { CONFLICT: 409 };
        ///
        ///    // Validate input.
        ///    if (!docs) throw  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bulkImport {
            get {
                return ResourceManager.GetString("bulkImport", resourceCulture);
            }
        }
    }
}
