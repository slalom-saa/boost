//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Slalom.Boost.VisualStudio.Commands.Domain.Files {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Templates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Templates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Slalom.Boost.VisualStudio.Commands.Domain.Files.Templates", typeof(Templates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Domain;
        ///
        ///namespace {{RootNameSpace}}.Domain.Model
        ///{
        ///	// TODO: Use the context menu to add any needed read models (optional)
        ///    // TODO: Use the context menu to add any needed commands (i.e. creation command)
        ///    // TODO: Update appropriate properties to be value objects (concepts)
        ///	// TODO: Use the context menu to add unit tests for methods and factories
        ///	// TODO: Update the URL to the documentation [URL to Documentation]
        ///
        ///	/// &lt;summary&gt;
        ///    /// Represents a &lt;se [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Entity {
            get {
                return ResourceManager.GetString("Entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Domain;
        ///
        ///namespace {{RootNameSpace}}.Domain.Model
        ///{
        ///    public class {{Name}} : EventSource
        ///    {
        ///        protected {{Name}}()
        ///        {
        ///        }
        ///
        ///        protected {{Name}}(Guid id) 
        ///			: base(id)
        ///        {
        ///        }       
        ///
        ///        public string Name { get; private set; }
        ///
        ///		public static {{Name}} Create(string name)
        ///        {
        ///            var target = new {{Name}}();
        ///            target.Process(new {{Name}}Added(target.Id, name));
        ///            return t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EventSource {
            get {
                return ResourceManager.GetString("EventSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Domain.Events;
        ///
        ///namespace {{RootNamespace}}.Domain.Model
        ///{
        ///    public class {{Name}}Added : EventSourceEvent
        ///    {
        ///        public {{Name}}Added(Guid {{NameLower}}Id, string name)
        ///			: base({{NameLower}}Id)
        ///        {
        ///            this.Name = name;
        ///        }
        ///
        ///        public string Name { get; }
        ///    }
        ///}.
        /// </summary>
        public static string EventSourceEvent {
            get {
                return ResourceManager.GetString("EventSourceEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using Slalom.Boost.Domain.Concepts;
        ///using Slalom.Boost.Validation;
        ///
        ///namespace {{RootNamespace}}.Domain.Model
        ///{
        ///	/// &lt;seealso boost=&quot;Concept (Value Object)&quot;/&gt;
        ///    public class {{Name}} : ConceptAs&lt;string&gt;
        ///    {
        ///        public static implicit operator {{Name}}(string value)
        ///        {
        ///            var target = new {{Name}} { Value = value };
        ///            target.EnsureValid();
        ///            return target;
        ///        }
        ///
        ///        public override IEnumerable [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StringConcept {
            get {
                return ResourceManager.GetString("StringConcept", resourceCulture);
            }
        }
    }
}
