using System;
using System.Linq;
using Slalom.Boost.Commands;
using {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}}.Events;

namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.{{Name}}
{
    // TODO: Update the task description [task]   
    // TODO: Add an input validation rule [Boost]
    // TODO: Add any security rules [Boost]
    // TODO: Add any business rules [Boost]
	// TODO: Add a PowerShell script [Boost]
    // TODO: Add integration tests
	// TODO: Update the documentation URL [Documentation URL]

    /// <summary>
    /// An imperative message to [task].
    /// </summary>
	/// <seealso href="[Documentation URL]"/>
	/// <seealso boost="Command" href="https://www.safaribooksonline.com/library/view/Reactive+Messaging+Patterns+with+the+Actor+Model:+Applications+and+Integration+in+Scala+and+Akka/9780133846904/ch06.html#ch06lev1sec1">Command Message</seealso>
    public class {{Name}}Command : Command<{{ReturnType}}>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="{{Name}}Command"/> class.
        /// </summary>{{Properties.GetParameterComments()}}
        public {{Name}}Command({{Properties.GetPropertyArguments("Id")}})
        {
{{Properties.GetPropertyAssignments()}}
        }
{{Properties.GetPropertyDeclaration()}}
    }
}