//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Slalom.Boost.Templates {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Files {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Files() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Slalom.Boost.Templates.Files", typeof(Files).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Commands;
        ///using Slalom.Boost.Domain;
        ///using System.Threading.Tasks;
        ///using {{ProjectItem.GetNamespace()}};
        ///using {{ProjectItem.GetNamespace()}}.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.Add{{ProjectItem.GetClassName()}}
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Handles/Processes the &lt;seealso cref=&quot;Add{{ProjectItem.GetClassName()}}Command&quot;/&gt; command.
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso cref=&quot;Add{{ProjectItem.GetClassName()} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddAggregateCommandHandlerTemplate {
            get {
                return ResourceManager.GetString("AddAggregateCommandHandlerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Commands;
        ///using {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}}.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.Add{{ProjectItem.GetClassName()}}
        ///{
        ///    // TODO: Update the task description [task]    
        ///	// TODO: Add a PowerShell script [Boost]
        ///	// TODO: Update the documentation URL [Documentation URL]
        ///
        ///    /// &lt;summary&gt;
        ///    /// An imperative message to &lt;see href=&quot;[Documentation URL]&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddAggregateCommandTemplate {
            get {
                return ResourceManager.GetString("AddAggregateCommandTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Events;
        ///
        ///namespace {{ProjectItem.GetNamespace()}}.Events
        ///{
        ///	// TODO: Replace the event description [event]
        ///	// TODO: Update the URL to the documentation [Documentation URL]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Represents an event that is raised when [event].
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso cref=&quot;{{Name}}&quot;/&gt;
        ///	/// &lt;seealso href=&quot;[Documentation URL]&quot; /&gt;
        ///	/// &lt;seealso boost=&quot;Domain Event&quot;/&gt;
        ///	public class {{Name}}AddedEvent : Event
        ///    {
        ///        /// &lt;summary&gt;
        ///        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AggregateAddedEventTemplate {
            get {
                return ResourceManager.GetString("AggregateAddedEventTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Domain;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain.{{Name.Pluralize()}}
        ///{
        ///	// TODO: Add an add command for creation [Boost]
        ///	// TODO: Update the URL to the documentation [URL to Documentation]
        ///
        ///	/// &lt;summary&gt;
        ///    /// Represents a &lt;see href=&quot;[URL to Documentation]&quot;&gt;{{Name.Humanize(LetterCasing.Title)}}&lt;/see&gt;.
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso boost=&quot;Entity&quot; href=&quot;https://www.safaribooksonline.com/library/view/implementing-domain-driven-design/9780133039900/ch05.h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AggregateTemplate {
            get {
                return ResourceManager.GetString("AggregateTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///using Slalom.Boost.Validation;
        ///
        ///using Machine.Specifications;
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Domain
        ///{
        ///	[Subject(typeof({{ProjectItem.GetClassName()}}))]
        ///    public class When_calling_{{Method.ToLower()}}_on_a_{{ProjectItem.GetClassName().ToLower()}}_with_default_arguments
        ///    {
        ///		static Exception Exception;
        ///
        ///		static {{ProjectItem.GetClassName()}} {{ProjectItem.GetCla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AggregateUnitTestTemplate {
            get {
                return ResourceManager.GetString("AggregateUnitTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using Slalom.Boost.Domain;
        ///using Slalom.Boost.Validation;
        ///
        ///namespace {{ProjectItem.GetNamespace()}}.Rules
        ///{
        ///    // TODO: Update the description [description]
        ///	// TODO: Update class name [business_rule]
        ///    // TODO: Set the correct order in the constructor
        ///    // TODO: Implement the validation below
        ///    // TODO: Add any unit tests
        ///
        ///    /// &lt;summary&gt;
        ///    /// Validates the &lt;seealso cref=&quot;{{ProjectItem.GetClassName()}}&quot; /&gt; to en [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BusinessValidationRuleTemplate {
            get {
                return ResourceManager.GetString("BusinessValidationRuleTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Web.Http;
        ///using System.Web.Http.OData;
        ///using Slalom.Boost.WebApi.Controllers;
        ///using System.Threading.Tasks;
        ///
        ///namespace {{Project.GetModuleName()}}.WebApi.Controllers
        ///{
        ///    [RoutePrefix(&quot;{{Plural.Humanize(LetterCasing.LowerCase)}}&quot;), AllowAnonymous]
        ///    public class {{Single}}Controller : CommandController
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string CommandControllerTemplate {
            get {
                return ResourceManager.GetString("CommandControllerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Web.Http;
        ///using System.Web.Http.OData;
        ///using Slalom.Boost.WebApi.Controllers;
        ///using System.Threading.Tasks;
        ///
        ///namespace {{Project.GetModuleName()}}.WebApi.Controllers
        ///{
        ///    // TODO: Fix the command names or create new commands if needed
        ///    // TODO: Run the project to open Swagger and check the routes
        ///	// TODO: Remove AllowAnonymous if the user should authenticate
        ///	// TODO: Use the context menu to bind to IIS if not already bound
        ///
        ///    [RoutePrefix(&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandControllerWithParameterSearchTemplate {
            get {
                return ResourceManager.GetString("CommandControllerWithParameterSearchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using Slalom.Boost.Commands;
        ///using Slalom.Boost.Domain;
        ///using {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}};
        ///using {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}}.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.{{Name}}
        ///{
        ///	// TODO: Update handle method
        ///    // TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Han [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandHandlerTemplate {
            get {
                return ResourceManager.GetString("CommandHandlerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///using Slalom.Boost.Validation;
        ///
        ///using Machine.Specifications;
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Domain
        ///{
        ///	[Subject(typeof({{ProjectItem.GetClassName()}}))]
        ///    public class When_calling_{{Method.ToLower()}}_on_a_{{ProjectItem.GetClassName().ToLower()}}_with_default_arguments
        ///    {
        ///		static Exception Exception;
        ///
        ///		static {{ProjectItem.GetClassName()}} {{ProjectItem.GetCla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandIntegrationTestSetupTemplate {
            get {
                return ResourceManager.GetString("CommandIntegrationTestSetupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///using Slalom.Boost.Validation;
        ///
        ///using Machine.Specifications;
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Domain
        ///{
        ///	[Subject(typeof({{ProjectItem.GetClassName()}}))]
        ///    public class When_calling_{{Method.ToLower()}}_on_a_{{ProjectItem.GetClassName().ToLower()}}_with_default_arguments
        ///    {
        ///		static Exception Exception;
        ///
        ///		static {{ProjectItem.GetClassName()}} {{ProjectItem.GetCla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandIntegrationTestTemplate {
            get {
                return ResourceManager.GetString("CommandIntegrationTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using Slalom.Boost.Commands;
        ///using {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}}.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.{{Name}}
        ///{
        ///    // TODO: Update the task description [task]   
        ///    // TODO: Add an input validation rule [Boost]
        ///    // TODO: Add any security rules [Boost]
        ///    // TODO: Add any business rules [Boost]
        ///	// TODO: Add a PowerShell script [Boost]
        ///    // TOD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommandTemplate {
            get {
                return ResourceManager.GetString("CommandTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Collections.Generic;
        ///using System.Data.Entity;
        ///using Slalom.Boost.EntityFramework.Domain;
        ///using Slalom.Boost.EntityFramework.GraphDiff;
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///namespace {{Project.GetModuleName()}}.Persistence.Domain
        ///{
        ///    // TODO: To move quickly and revisit persistence, use the EntityFrameworkDocumentRepository&lt;{{ProjectItem.GetClassName()}}&gt;.
        ///	//		 You can change back once the model is more stable.
        ///    //    - or -
        ///    // TODO: If  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EntityFrameworkRepositoryTemplate {
            get {
                return ResourceManager.GetString("EntityFrameworkRepositoryTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Data.Entity.ModelConfiguration;
        ///using System.Linq;
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///namespace {{Project.GetModuleName()}}.Persistence.Domain
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Contains the Entity Framework mapping for the &lt;see cref=&quot;{{ProjectItem.GetClassName()}}&quot; /&gt; class.
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso boost=&quot;Entity Framework Mapping&quot;/&gt;
        ///    public class {{ProjectItem.GetClassName()}}Mapping : EntityTypeConfiguration&lt;{{ProjectItem.GetClassName()}}&gt;
        ///    {
        ///	    /// &lt;s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EntityMappingTemplate {
            get {
                return ResourceManager.GetString("EntityMappingTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain.{{ProjectItem.GetClassName().Pluralize()}}.Events
        ///{
        ///	// TODO: Replace the event description [event]
        ///	// TODO: Update the URL to the documentation [Documentation URL]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Represents an event that is raised when [event].
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso cref=&quot;{{ProjectItem.GetClassName()}}&quot;/&gt;
        ///	/// &lt;seealso href=&quot;[Documentation URL]&quot; /&gt;
        ///	/// &lt;seealso boost=&quot;Event&quot;/&gt;
        ///	public class {{Name}} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EventTemplate {
            get {
                return ResourceManager.GetString("EventTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Commands;
        ///using Slalom.Boost.Validation;
        ///using System.Collections.Generic;
        ///
        ///namespace {{ProjectItem.GetNamespace()}}.Rules
        ///{
        ///	// TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Validates the input of the &lt;seealso cref=&quot;{{ProjectItem.GetClassName()}}&quot;/&gt; for basic correctness.
        ///    /// &lt;/summary&gt;
        ///    public class {{Name}} : InputValidationRuleSet&lt;{{ProjectItem.GetClassName()}}&gt;
        ///    {
        ///	    /// &lt;summary&gt;
        ///        /// Initializes a new instance of the &lt;see cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InputValidationRuleSetTemplate {
            get {
                return ResourceManager.GetString("InputValidationRuleSetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using Slalom.Boost.Validation;
        ///using Machine.Specifications;
        ///
        ///using {{Command.GetNamespace()}};
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Application.Commands.{{Command.GetClassName().Substring(0, 9)}}.given
        ///{
        ///	[Subject(typeof({{ProjectItem.GetClassName()}}))]
        ///    public class a_configured_{{ProjectItem.GetClassName()}}_rule
        ///    {
        ///        protected static {{ProjectItem.GetClassName() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InputValidationUnitTestSetupTemplate {
            get {
                return ResourceManager.GetString("InputValidationUnitTestSetupTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Machine.Specifications;
        ///
        ///using {{Command.GetNamespace()}};
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Application.Commands.{{Command.GetClassName().Substring(0, 9)}}
        ///{
        ///    public class When_validating_{{Command.GetClassName().ToSnakeCase()}}_command_input_with_invalid_input : given.a_configured_{{ProjectItem.GetClassName()}}_rule
        ///    {
        ///        Because of = () =&gt; ValidateCommand({{Command.GetCodeProperties().GetDefaultConstructorArgume [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InputValidationUnitTestTemplate {
            get {
                return ResourceManager.GetString("InputValidationUnitTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Validation;
        ///
        ///namespace {{ProjectItem.GetNamespace()}}.Rules
        ///{
        ///	// TODO: Update with URL to roles [URL to Roles]
        ///	// TODO: Update with Role name [Role]
        ///	// TODO: Update class name [user_is_in_role]
        ///	// TODO: Update user facing message with [role] and [perform task].
        ///    
        ///	/// &lt;summary&gt;
        ///    /// Validates the &lt;see cref=&quot;{{ProjectItem.GetClassName()}}&quot;/&gt; by ensuring that the user executing the command is in the &lt;see href=&quot;[URL to Roles]&quot;&gt;[Role]&lt;/see&gt; role.
        ///    /// &lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InRoleValidationRuleTemplate {
            get {
                return ResourceManager.GetString("InRoleValidationRuleTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Domain;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain.Members
        ///{
        ///	// TODO: Add an add command for creation [Boost]
        ///    // TODO: Add any additional commands [Boost]
        ///	// TODO: Add unit tests for factories and methods [Boost]
        ///	// TODO: Update the URL to the documentation [URL to Documentation]
        ///
        ///	/// &lt;summary&gt;
        ///    /// Represents a &lt;see href=&quot;[URL to Documentation]&quot;&gt;{{Name}}&lt;/see&gt; and provides a thread of continuity and identity, 
        ///	/// going through a lifecycle.
        ///    / [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MemberTemplate {
            get {
                return ResourceManager.GetString("MemberTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Collections.Generic;
        ///using System.Data.Entity;
        ///using Slalom.Boost.MongoDB;
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///namespace {{Project.GetModuleName()}}.Persistence.Domain
        ///{
        ///	/// &lt;summary&gt;
        ///    /// Provides a repository for &lt;see cref=&quot;{{ProjectItem.GetClassName()}}&quot; /&gt; entities.
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso boost=&quot;Repository&quot;/&gt;
        ///	/// &lt;seealso boost=&quot;Mongo Repository&quot;/&gt;
        ///	public class {{ProjectItem.GetClassName()}}Repository : MongoRepository&lt;{{Proj [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MongoRepositoryTemplate {
            get {
                return ResourceManager.GetString("MongoRepositoryTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using Slalom.Boost.Domain.Concepts;
        ///using Slalom.Boost.Validation;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain
        ///{
        ///	// TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Represents a username value object.
        ///    /// &lt;/summary&gt;
        ///    /// &lt;seealso boost=&quot;Concept&quot;/&gt;
        ///    public class {{Name}} : ConceptAs&lt;string&gt;
        ///    {
        ///        private static Regex ValidRegex = new Regex(&quot;^[a-z0-9_-]{6,18}$&quot;, RegexOptions.Compil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PasswordTemplate {
            get {
                return ResourceManager.GetString("PasswordTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;#
        ///.SYNOPSIS
        ///    TODO
        ///.DESCRIPTION
        ///    TODO
        ///.EXAMPLE
        ///    TODO
        ///#&gt;
        ///param (
        ///{{ParametersSection}}
        ///)
        ///
        ///&quot;&quot;
        ///$Start = [System.DateTime]::Now
        ///&quot;Starting: {{ProjectItem.GetClassName().Split(&apos;.&apos;).Last().Humanize(LetterCasing.LowerCase)}} at &quot; + $Start.ToString(&quot;HH:mm:ss.ffffzzz&quot;)
        ///    
        ///
        ///$Command = New-Object {{ProjectItem.GetFullClassName()}} {{CommandArguments}}
        ///
        ///$Container = New-Object Slalom.Boost.RuntimeBinding.SimpleContainer
        ///
        ///[Slalom.Boost.RuntimeBinding.IContainerExtensions]::AutoConfigure([S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PowerShellCommandTemplate {
            get {
                return ResourceManager.GetString("PowerShellCommandTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Entity.ModelConfiguration;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///using {{ProjectItem.GetNamespace()}};
        ///
        ///// TODO: Update to appropriate table name.
        ///// TODO: Add any ignores if needed.
        ///
        ///namespace {{Project.GetModuleName()}}.Persistence.Application
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Contains the EF mapping for the &lt;see cref=&quot;{{ProjectItem.GetClassName()}}&quot; /&gt; class.
        ///    /// &lt;/summary&gt;
        ///    /// &lt;remarks&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadModelMappingTemplate {
            get {
                return ResourceManager.GetString("ReadModelMappingTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.ReadModel;
        ///
        ///namespace {{Project.GetModuleName()}}.ReadModel.{{ProjectItem.GetClassName().Pluralize()}}
        ///{
        ///	// TODO: Update the purpose of the read model [purpose]	
        ///
        ///    /// &lt;summary&gt;
        ///    /// Provides a read model for [purpose].
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso boost=&quot;Read Model&quot;/&gt;
        ///    public class {{ProjectItem.GetClassName()}} : IReadModelElement
        ///    {
        ///{{IdProperty}}
        ///{{Properties.GetPublicPropertyDeclaration()}}
        ///
        ///		/// &lt;summary&gt;
        ///        /// Gets or sets the  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadModelTemplate {
            get {
                return ResourceManager.GetString("ReadModelTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using Slalom.Boost.Commands;
        ///using Slalom.Boost.Domain;
        ///using Slalom.Boost.Search;
        ///using {{Project.GetModuleName()}}.ReadModel.{{ProjectItem.GetEntityName().Pluralize()}};
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetClassName().Pluralize()}}.{{Name.Replace(&quot;Command&quot;, &quot;&quot;)}}
        ///{
        ///	// TODO: Update handle method
        ///    // TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Handles/Processes the &lt;seealso cref=&quot;{{Na [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchCommandHandlerTemplate {
            get {
                return ResourceManager.GetString("SearchCommandHandlerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using Slalom.Boost.Commands;
        ///using {{Project.GetModuleName()}}.ReadModel.{{ProjectItem.GetEntityName().Pluralize()}};
        ///
        ///namespace {{Project.GetModuleName()}}.Application.{{ProjectItem.GetEntityName().Pluralize()}}.Search{{ProjectItem.GetEntityName().Pluralize()}}
        ///{
        ///    // TODO: Update the task description [task]    
        ///    // TODO: Add any security rules [Boost]
        ///	// TODO: Update the documentation URL [Documentation URL]
        ///
        ///    /// &lt;summary&gt;
        ///    /// An imperative messag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchCommandTemplate {
            get {
                return ResourceManager.GetString("SearchCommandTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Slalom.Boost.Commands;
        ///using Machine.Specifications;
        ///using {{Project.GetNamespace()}};
        ///using {{Project.GetModuleName()}}.Domain.{{Area}}.Events;
        ///using {{Project.GetModuleName()}}.IntegrationTests.Application.given;
        ///
        ///namespace {{Project.GetModuleName()}}.IntegrationTests.Application.{{Area}}.{{Command}}.given
        ///{
        ///    [Subject(typeof({{ProjectItem.GetClassName()}}))]
        ///    public class a_configured_{{Command.ToSnakeCase()}} : a_configured_container
        ///    {
        ///        protected static Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StaticAggregateUnitTestTemplate {
            get {
                return ResourceManager.GetString("StaticAggregateUnitTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using Slalom.Boost.Domain;
        ///using Slalom.Boost.Validation;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain
        ///{
        ///	// TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Represents a {{Name.Humanize(LetterCasing.LowerCase)}} value object.
        ///    /// &lt;/summary&gt;
        ///    /// &lt;seealso boost=&quot;Concept&quot;/&gt;
        ///    public class {{Name}} : ConceptAs&lt;string&gt;
        ///    {
        ///        private static Regex ValidRegex = new Regex(&quot;^[a-z]{3,16}$&quot;,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringConceptTemplate {
            get {
                return ResourceManager.GetString("StringConceptTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///using {{Project.GetModuleName()}}.Domain;
        ///
        ///using Slalom.Boost.Validation;
        ///
        ///using Machine.Specifications;
        ///
        ///namespace {{Project.GetModuleName()}}.UnitTests.Domain
        ///{
        ///	// TODO: Enable NCrunch
        ///	// TODO: Build out unit tests
        ///	// TODO: Move tests into matching files
        ///
        ///	[Subject(typeof({{Name}}))]
        ///    public class When_using_a_{{Name.ToLower()}}_value_object_with_invalid_value
        ///    {
        ///        static Exception exception;
        ///
        ///        B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StringConceptUnitTestTemplate {
            get {
                return ResourceManager.GetString("StringConceptUnitTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading.Tasks;
        ///using System.Linq;
        ///using Slalom.Boost;
        ///using Slalom.Boost.Domain;
        ///using Slalom.Boost.Events;
        ///using {{ProjectItem.GetNamespace()}}.Events;
        ///
        ///namespace {{Project.GetModuleName()}}.ReadModel.{{ProjectItem.GetClassName().Pluralize()}}
        ///{
        ///	/// &lt;summary&gt;
        ///    /// Synchronizes a elements of the domain model with the read model.
        ///    /// &lt;/summary&gt;
        ///	/// &lt;seealso boost=&quot;Read Model Synchronizer&quot;/&gt;
        ///    public class {{ProjectItem.GetClassName()}}Synchronizer : IHand [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SynchronizerTemplate {
            get {
                return ResourceManager.GetString("SynchronizerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using Slalom.Boost.Domain;
        ///using Slalom.Boost.Validation;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace {{Project.GetModuleName()}}.Domain
        ///{
        ///	// TODO: Add unit tests [Boost]
        ///
        ///    /// &lt;summary&gt;
        ///    /// Represents a {{Name.Humanize(LetterCasing.LowerCase)}} value object.
        ///    /// &lt;/summary&gt;
        ///    /// &lt;seealso boost=&quot;Concept&quot;/&gt;
        ///    public class {{Name}} : ConceptAs&lt;string&gt;
        ///    {
        ///        private static Regex ValidRegex = new Regex(&quot;^[a-z0-9_-]{3,16 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserNameTemplate {
            get {
                return ResourceManager.GetString("UserNameTemplate", resourceCulture);
            }
        }
    }
}
